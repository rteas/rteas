{"version":3,"sources":["logo.svg","card/TitleCard.js","card/DetailsCard.js","card/Card.js","card/TabCard.js","nav/Nav.js","nav/headerNav.js","nav/footerNav.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","TitleCard","react_default","a","createElement","className","this","props","name","Component","DetailsCard","details","Card","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","title","card_TitleCard","card_DetailsCard","Nav","links","map","link","href","HeaderNav","i","navButton","document","querySelector","navItems","querySelectorAll","classList","toggle","length","console","log","remove","class","onClick","toggleNav","clearNav","id","FooterNav","App","loading","_this2","setTimeout","setState","process","headerNav","card_Card","footerNav","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2f2b8560.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from 'react';\nimport './css/TitleCard.css';\n\nclass TitleCard extends Component {\n\n  render(){\n    return (\n      <div className=\"title-wrapper\">\n        <h2 className=\"card-title\">{this.props.name}</h2>\n        <h3 className=\"card-subtitle\">Welcome!</h3>\n      </div>\n    );\n  }\n\n}\n\nexport default TitleCard;\n","import React, { Component } from 'react';\n\nclass DetailsCard extends Component {\n\n  render(){\n    return (\n      <div className=\"details-wrapper\">\n        <h3>{this.props.details}</h3>\n      </div>\n    );\n  }\n\n}\n\nexport default DetailsCard;\n","import React, { Component } from 'react';\nimport TitleCard from './TitleCard';\nimport DetailsCard from './DetailsCard';\nimport TabCard from './TabCard';\nimport './css/Card.css';\n\nclass Card extends Component{\n  constructor(props) {\n    super(props);\n    this.state = {\n      title: props.title,\n    }\n  }\n\n  render(){\n    return (\n      <div className=\"card-wrapper\">\n        <div className=\"card-info\">\n          <TitleCard className=\"card-title\" name={this.state.title}/>\n          <DetailsCard className=\"card-detals\" />\n        </div>\n\n      </div>\n\n    );\n  }\n}\n\nexport default Card;\n","import React, { Component } from 'react';\nimport './css/TabCard.css';\n\nclass TabCard extends Component {\n\n  constructor(props){\n    super(props);\n    this.colorDelta=\"222222\";\n    this.state = {\n      bgColor: props.bgColor,\n    }\n  }\n\n\n  render(){\n    return (\n        <li bgColor={this.state.bgColor} className=\"card-tab\">\n          <a href={this.props.link}> props.name = {this.props.name}</a>\n        </li>\n    );\n  }\n\n}\n\n/*\nfunction mouseEnter(event){\n  this.setState({bgColor=addHexColor(this.state.bgColor,this.colorDelta)})\n}\n\nfunction mouseExit(event){\n  this.setState({bgColor=subtractHexColor(this.state.bgColor,this.colorDelta)})\n}\n\nfunction addHexColor(c1, c2) {\n  var hexStr = (parseInt(c1, 16) + parseInt(c2, 16)).toString(16);\n  while (hexStr.length < 6) { hexStr = '0' + hexStr; } // Zero pad.\n  return hexStr;\n}\n\nfunction subtractHexColor(c1, c2) {\n  var hexStr = (parseInt(c1, 16) - parseInt(c2, 16)).toString(16);\n  while (hexStr.length < 6) { hexStr = '0' + hexStr; } // Zero pad.\n  return hexStr;\n}\n*/\n\nexport default TabCard;\n","import React, { Component } from 'react';\nimport './css/Nav.css';\n\nclass Nav extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      links: ['home', 'projects', 'contact']\n    }\n  }\n\n\n  render(){\n    var links = this.state.links.map((link) => {\n      return(\n        <li>\n          <a href={\"/\"+link}>{link}</a>\n        </li>\n      );\n\n    });\n\n    return (\n      <div className=\"title-wrapper\">\n        <ul>\n          {links}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default Nav;\n","import React, { Component } from 'react';\nimport Nav from './Nav';\nimport './css/Nav.css';\n\nclass HeaderNav extends Nav {\n\n  toggleNav(){\n\n      var navButton = document.querySelector('.mobile-nav-button');\n      var navItems = document.querySelectorAll('.item-slider');\n\n      navButton.classList.toggle('nav-on');\n\n      var i;\n      for(i = 0; i < navItems.length; i++){\n          console.log(navItems[i]);\n          var newClass = 'show-menu';\n          navItems[i].classList.toggle(newClass);\n      }\n  }\n\n  clearNav(){\n    var navButton = document.querySelector('.mobile-nav-button');\n    var navItems = document.querySelectorAll('.item-slider');\n\n    navButton.classList.remove('nav-on');\n    var i;\n    for(i = 0; i < navItems.length; i++){\n        console.log(navItems[i]);\n        var newClass = 'show-menu';\n        navItems[i].classList.remove(newClass);\n    }\n  }\n\n  render(){\n    return (\n      <div className=\"header-nav\">\n        <div class=\"fixed-nav\">\n              <div class=\"flex-nav\">\n                  <div class=\"header-logo\">\n                      <span onClick={this.toggleNav} class=\"mobile-nav-button\"></span>\n                      <span onClick={this.clearNav} class=\"logo-button\">Richy Teas</span>\n                  </div>\n                  <div id=\"nav-menu\" class=\"header-links mobile-hide\">\n                      <ul>\n                          <li onClick={this.toggleNav} class=\"item-slider menu-slide\">About</li>\n                          <li onClick={this.toggleNav} class=\"item-slider menu-slide2\">Projects</li>\n                          <li onClick={this.toggleNav} class=\"item-slider menu-slide3\">Resume</li>\n                          <li onClick={this.toggleNav} class=\"item-slider menu-slide4\">Contact</li>\n                      </ul>\n                  </div>\n              </div>\n        </div>\n        <div class=\"header-pad\"></div>\n      </div>\n\n    );\n  }\n}\n\nexport default HeaderNav;\n","import React, { Component } from 'react';\nimport Nav from './Nav';\nimport './css/Nav.css';\n\nclass FooterNav extends Nav {\n\n  render(){\n    return (\n      <div className=\"title-wrapper\">\n        <h2>Let's keep the world spinin'</h2>\n      </div>\n    );\n  }\n}\n\nexport default FooterNav;\n","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Card from './card/Card';\nimport TabCard from './card/TabCard';\nimport HeaderNav from './nav/headerNav';\nimport FooterNav from './nav/footerNav';\nimport Nav from './nav/Nav';\n\nclass App extends Component {\n\n  state = {\n    loading: true\n  };\n\n  componentDidMount(){\n    setTimeout(() => this.setState({ loading: false }), 250);\n  }\n\n  render() {\n    console.log(this.state);\n    console.log(\"This is the process.env\", process.env.PUBLIC_URL);\n\n    const loading = this.state.loading;\n\n    if(loading){\n      return null;\n    }\n\n    return (\n      <div>\n        <HeaderNav/>\n\n        <Card title= \"< work in progress >\"/>\n        <FooterNav/>\n      </div>\n    )\n\n\n  }\n}\n\nexport default App;\n\n/* starter code\n\n<div className=\"App\">\n  <header className=\"App-header\">\n    <img src={logo} className=\"App-logo\" alt=\"logo\" />\n    <p>\n      Edit <code>src/App.js</code> and save to reload.\n    </p>\n    <a\n      className=\"App-link\"\n      href=\"https://reactjs.org\"\n      target=\"_blank\"\n      rel=\"noopener noreferrer\"\n    >\n      Learn React\n    </a>\n  </header>\n</div>\n);\n*/\n\n/* Tab code\n<div className=\"card-tabs\">\n  <ul>\n    <TabCard className=\"card-tab\" name=\"Tab 1\" link=\"/\"/>\n    <TabCard className=\"card-tab\" name=\"Tab 2\" link=\"/\"/>\n    <TabCard className=\"card-tab\" name=\"Tab 3\" link=\"/\"/>\n    <TabCard className=\"card-tab\" name=\"Tab 4\" link=\"/\"/>\n  </ul>\n</div>\n*/\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './main.css';\nimport App from './App';\nimport Card from './card/Card';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nReactDOM.render(<App/>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}